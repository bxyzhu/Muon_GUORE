# Use these open statements to open selected visualization
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 1200x600-0+0

/exp/checkOverlaps true
/exp/setShieldingStyle GERDA
/exp/setFillGas NitrogenLiquid
/exp/update

# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume




# Specify view angle:
/vis/viewer/set/viewpointThetaPhi
/vis/viewer/set/lightsVector 1 1 1

# Specify style (surface, wireframe, auxiliary edges,...)
/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100

# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
#Draw hits at end of event:
/vis/scene/add/hits


# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate
#

# To get nice view
/vis/viewer/set/style surface
/vis/viewer/set/hiddenMarker true

#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
#
# For file-based drivers, use this to create an empty detector view:
#/vis/viewer/flush

/GUORE/generator/select GPS
/gps/pos/type Beam
/gps/pos/shape Circle
/gps/ene/mono 1 MeV
/gps/particle geantino
/gps/direction 0 0 -1
/gps/pos/centre 0 0 10 m
/gps/pos/sigma_r 2 m